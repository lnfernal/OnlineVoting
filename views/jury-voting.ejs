<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Primary Meta Tags -->
    <title>
        <%= votingData.name %> - <%= votingData.roesc.toUpperCase() %> voting
    </title>
    <meta name="title" content="<%= votingData.name %> - <%= votingData.roesc.toUpperCase() %> voting">
    <meta name="description" content="Vote for your favourites in <%= votingData.name %>">

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="<%= protocol %>://<%= domain %>">
    <meta property="og:title" content="<%= votingData.name %> - <%= votingData.roesc.toUpperCase() %> voting">
    <meta property="og:description" content="Vote for your favourites in <%= votingData.name %>">
    <% if (votingData.designOptions.background.image) { %>
        <meta property="og:image" content="<%=votingData.designOptions.background.image %>">
        <% } %>

            <!-- Twitter -->
            <meta property="twitter:card" content="summary_large_image">
            <meta property="twitter:url" content="<%= protocol %>://<%= domain %>">
            <meta property="twitter:title"
                content="<%= votingData.name %> - <%= votingData.roesc.toUpperCase() %> voting">
            <meta property="twitter:description" content="Vote for your favourites in <%= votingData.name %>">
            <% if (votingData.designOptions.background.image) { %>
                <meta property="twitter:image" content="<%=votingData.designOptions.background.image %>">
                <% } %>
                    <link rel="stylesheet" href="/voting.css">
                    <style>
                        html {
                            --background-color: <%=votingData.designOptions.background.color %>;
                            --background-image: url(<%=votingData.designOptions.background.image %>);
                            --font-color: <%=votingData.designOptions.main_window.font_color %>;
                            --main-background-color: <%=votingData.designOptions.main_window.background_color %>;
                            --button-font-color: <%=votingData.designOptions.main_window.button_font_color %>;
                            --button-background-color: <%=votingData.designOptions.main_window.button_background_color %>;
                            --option-background-color: <%=votingData.designOptions.option.background_color %>;
                        }
                    </style>
                    <script>
                        function mobileCheck() {
                            let check = false;
                            (function (a) { if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);
                            return check;
                        };
                    </script>
</head>

<body>
    <div id="container">
        <div id="main">
            <div>
                <p>Logged in as <img class="avatar"
                        src="https://cdn.discordapp.com/avatars/<%= discordData.id %>/<%= discordData.avatar %>.png"
                        alt="">
                    <%= discordData.username %>#<%= discordData.discriminator %> <a href="/logout">Log out</a> | <img
                                src="/roblox_logo_white.png" class="robloxLogo">
                            <%= robloxData.username %> <a href="/change_roblox">Change</a>
                </p>
            </div>
            <div id="voting">
                <button onclick="togglePossibleVotingOptions()" id="possibleVotingOptionsToggler">Show possible voting
                    options</button>
                <div id="possibleVotingOptions" style="display: none;">
                    <ul>
                        <% votingData.votingOptions.forEach(element=> { %>
                            <li>
                                - <%= element.name %>
                            </li>
                            <% }) %>
                    </ul>
                </div>
                <div id="votingInputs">
                    <% votingData.juryVotingSettings.points.forEach(point=> { %>
                        <p>
                            <%= point %> points
                        </p>
                        <input type="text" class="longinput votingPoints" points="<%= point %>">
                        <% }) %>
                            <br>
                            <button onclick="sendVote()">Submit</button>
                </div>
            </div>
            <div id="voteSubmitted" style="display: none;">
                <h3 id="voteSubmittedMessage">Your vote has been successfully submitted!</h3>
            </div>
            <div id="loading" style="display: none;">
                <h3>Loading</h3>
            </div>
        </div>
    </div>

    <script>
        const possibleVotingOptionsDiv = document.getElementById("possibleVotingOptions")
        const possibleVotingOptionsToggler = document.getElementById("possibleVotingOptionsToggler")
        const votingOptions = JSON.parse(`<%- JSON.stringify(votingData.votingOptions) %>`)

        function switchDivs(oldDiv, newDiv) {
            document.getElementById(oldDiv).style.display = "none";
            document.getElementById(newDiv).style.display = "block";
        }

        function togglePossibleVotingOptions() {
            if (possibleVotingOptionsDiv.style.display === "none") {
                possibleVotingOptionsDiv.style.display = "block"
                possibleVotingOptionsToggler.innerText = "Hide possible voting options"
            } else {
                possibleVotingOptionsDiv.style.display = "none"
                possibleVotingOptionsToggler.innerText = "Show possible voting options"
            }
        }

        function sendVote() {
            let canSubmit = true
            let alreadyInputted = []
            let toSend = {
                roesc: "<%= votingData.roesc %>",
                voting: "<%= votingData.link %>",
                points: []
            }
            document.querySelectorAll(".votingPoints").forEach(element => {
                const optionName = element.value
                const points = element.getAttribute("points")

                if (!votingOptions.find(r => r.name.toLowerCase() === optionName.toLowerCase()) || alreadyInputted.find(r => r === optionName.toLowerCase())) {
                    canSubmit = false
                    element.style.backgroundColor = "#e80000"
                } else {
                    element.style.backgroundColor = "#00cc07"
                    alreadyInputted.push(optionName.toLowerCase())
                    toSend.points.push({ points: parseInt(points), name: optionName })
                }
            })
            if (canSubmit) {
                switchDivs("voting", "loading")
                fetch("/api/voting/submit_jury_vote", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(toSend)
                }).then(res => res.json()).then(res => {
                    switchDivs("loading", "voteSubmitted")
                    if (!res.success) {
                        document.getElementById("voteSubmittedMessage").innerText = `Error: ${res.error}`
                    }
                })
            }
        }
    </script>
</body>

</html>