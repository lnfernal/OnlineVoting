<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Primary Meta Tags -->
    <title>
        <%= votingName %> - <%= roesc.toUpperCase() %> voting
    </title>
    <meta name="title" content="<%= votingName %> - <%= roesc.toUpperCase() %> voting">
    <meta name="description" content="Vote for your favourites in <%= votingName %>">

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="<%= protocol %>://<%= domain %>">
    <meta property="og:title" content="<%= votingName %> - <%= roesc.toUpperCase() %> voting">
    <meta property="og:description" content="Vote for your favourites in <%= votingName %>">
    <% if (designOptions.background.image) { %>
        <meta property="og:image" content="<%=designOptions.background.image %>">
        <% } %>

            <!-- Twitter -->
            <meta property="twitter:card" content="summary_large_image">
            <meta property="twitter:url" content="<%= protocol %>://<%= domain %>">
            <meta property="twitter:title" content="<%= votingName %> - <%= roesc.toUpperCase() %> voting">
            <meta property="twitter:description" content="Vote for your favourites in <%= votingName %>">
            <% if (designOptions.background.image) { %>
                <meta property="twitter:image" content="<%=designOptions.background.image %>">
                <% } %>

                    <title>
                        <%= votingName %> - <%= roesc %> voting
                    </title>
                    <link rel="preconnect" href="https://fonts.googleapis.com">
                    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
                    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
                    <style>
                        html {
                            --background-color: <%=designOptions.background.color %>;
                            --background-image: url(<%=designOptions.background.image %>);
                            --font-color: <%=designOptions.main_window.font_color %>;
                            --main-background-color: <%=designOptions.main_window.background_color %>;
                            --button-font-color: <%=designOptions.main_window.button_font_color %>;
                            --button-background-color: <%=designOptions.main_window.button_background_color %>;
                            --option-background-color: <%=designOptions.option.background_color %>;
                            height: 100%;
                            -moz-transform: scale(1.3);
                            /* for Firefox, default 1*/
                            zoom: 130%;
                            /* For Chrome, IE, default 100%*/
                            text-align: center;
                            font-family: "Roboto", sans-serif;
                        }

                        body {
                            background-color: var(--background-color);
                            background: var(--background-image) no-repeat center center fixed;
                            -webkit-background-size: cover;
                            -moz-background-size: cover;
                            -o-background-size: cover;
                            background-size: cover;
                            margin: 0;
                            height: 100%;
                        }

                        #container {
                            display: grid;
                            align-items: center;
                            /* justify-content: center; */
                            max-width: 600px;
                            height: 100%;
                            margin: 0 auto;
                        }

                        #main {
                            background-color: var(--main-background-color);
                            color: var(--font-color);
                            width: 100%;
                            border-radius: 5px;
                            padding-bottom: 20px;
                        }

                        button {
                            background-color: var(--button-background-color);
                            color: var(--button-font-color);
                            border: 0;
                            border-radius: 5px;
                            padding: 5px;
                        }

                        button:hover {
                            cursor: pointer;
                            filter: brightness(85%);
                        }

                        input {
                            border-radius: 5px;
                            margin-bottom: 5px;
                        }

                        a {
                            color: var(--font-color);
                        }

                        .avatar {
                            height: 20px;
                            border-radius: 100%;
                            position: relative;
                            top: 5px;
                        }

                        .robloxLogo {
                            height: 20px;
                            position: relative;
                            top: 5px;
                        }

                        .votingOptionButton {
                            width: 110px;
                            margin-bottom: 5px;
                            background-color: var(--option-background-color);
                        }

                        .votingOptionButton>img {
                            max-width: 100px;
                        }
                    </style>
                    <script>
                        function mobileCheck() {
                            let check = false;
                            (function (a) { if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);
                            return check;
                        };
                    </script>
</head>

<body>
    <div id="container">
        <div id="main">
            <div>
                <p>Logged in as <img class="avatar"
                        src="https://cdn.discordapp.com/avatars/<%= discordData.id %>/<%= discordData.avatar %>.png"
                        alt="">
                    <%= discordData.username %>#<%= discordData.discriminator %> <a href="/logout">Log out</a>
                            <% if (robloxData.id) { %>
                                | <img src="/roblox_logo_white.png" class="robloxLogo">
                                <%= robloxData.username %> <a href="/change_roblox">Change</a>
                                    <% } %>
                </p>
            </div>
            <% if (televotingSettings.open) { %>
                <% if (!robloxData.id) { %>
                    <div id="chooseRobloxVerificationMethod">
                        <h3>How would you want to verify your Roblox account?</h3>
                        <button onclick="verifyRover()">Rover</button> <button
                            onclick="verifyBloxlink()">Bloxlink</button>
                        <% if (verifyUsingGame) { %>
                            <button onclick="verifyRoblox()">Roblox game</button>
                            <% } %>
                    </div>
                    <% } else { %>
                        <div id="voting">
                            <% if (televotingSettings.minVote===televotingSettings.maxVote) { %>
                                <h3>Select <%= televotingSettings.minVote %> options</h3>
                                <% } else { %>
                                    <h3>Select <%= televotingSettings.minVote %> - <%= televotingSettings.maxVote %>
                                                options
                                    </h3>
                                    <% } %>
                                        <div id="selectionDiv">
                                            <% votingOptions.forEach((option,i)=> { %>
                                                <button class="votingOptionButton" optionname="<%= option.name %>"
                                                    onclick="selectButton('<%= i %>')" optionid="<%= i %>">
                                                    <% if (option.image) { %>
                                                        <img src="<%= option.image %>">
                                                        <br>
                                                        <% } %>
                                                            <%= option.name %>
                                                </button>
                                                <% }) %>
                                        </div>
                                        <button onclick="submitVote()">Submit</button>
                        </div>
                        <div id="voteSubmitted" style="display: none;">
                            <h3 id="voteSubmittedMessage">Your vote has been successfully submitted!</h3>
                        </div>
                        <% } %>
                            <div id="verifyRoblox" style="display: none;">
                                <h3>What's your Roblox username</h3>
                                <input id="robloxUsername" type="text"><br>
                                <button onclick="verifyRobloxRedirect()">Next</button>
                            </div>
                            <div id="verifyRobloxRefresh" style="display: none;">
                                <h3>Join the Roblox game that you got redirected to, press the verify button and refresh
                                    this
                                    page</h3>
                            </div>
                            <div id="loading" style="display: none;">
                                <h3>Loading</h3>
                            </div>
                            <% } else { %>
                                <div>
                                    <h3>This voting is currently closed</h3>
                                </div>
                                <% } %>
        </div>
    </div>

    <script>
        const minVotingOptions = parseInt("<%= televotingSettings.minVote %>")
        const maxVotingOptions = parseInt("<%= televotingSettings.maxVote %>")
        const votingOptionBackgroundColor = "<%= designOptions.option.background_color %>";

        function switchDivs(oldDiv, newDiv) {
            document.getElementById(oldDiv).style.display = "none";
            document.getElementById(newDiv).style.display = "block";
        }

        function verifyRoblox() {
            switchDivs("chooseRobloxVerificationMethod", "verifyRoblox")
        }

        function verifyRover() {
            fetch("/api/voting/verify_rover", { method: "POST" }).then(res => {
                location.reload();
            })
        }

        function verifyBloxlink() {
            fetch("/api/voting/verify_bloxlink", { method: "POST" }).then(res => {
                location.reload();
            })
        }

        function verifyRobloxRedirect() {
            const username = document.getElementById("robloxUsername").value;
            if (username) {
                switchDivs("verifyRoblox", "verifyRobloxRefresh")
                window.open("https://roblox.com")
                fetch("/api/voting/verify_roblox", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ username: username })
                })
            }
        }

        let votedFor = [];

        function selectButton(id) {
            // const button = document.querySelector(`[optionid='${id}']`)
            // const countryname = button.getAttribute("optionname")
            if (votedFor.find(r => r === id)) {
                votedFor.splice(votedFor.indexOf(id), 1)
            } else if (votedFor.length < maxVotingOptions) {
                votedFor.push(id)
            }

            document.querySelectorAll(".votingOptionButton").forEach(element => {
                if (votedFor.find(r => r === element.getAttribute("optionid"))) {
                    element.style.backgroundColor = "#00FF00"
                } else if (votedFor.length >= maxVotingOptions) {
                    element.style.backgroundColor = "#FF0000"
                } else {
                    element.style.backgroundColor = votingOptionBackgroundColor;
                }
            })
        }

        function submitVote() {
            if (votedFor.length >= minVotingOptions && votedFor.length <= maxVotingOptions) {
                const toSend = []
                votedFor.forEach(id => {
                    toSend.push(document.querySelector(`[optionid="${id}"]`).getAttribute("optionname"))
                })
                switchDivs("voting", "loading")
                let device = "Desktop"
                if (mobileCheck()) {
                    device = "Mobile"
                }
                fetch("/api/voting/submit_vote", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ votes: toSend, roesc: "<%= roesc %>", device: device, voting: "<%= votingLink %>" })
                }).then(res => res.json()).then(res => {
                    switchDivs("loading", "voteSubmitted")
                    if (!res.success) {
                        document.getElementById("voteSubmittedMessage").innerText = `Error: ${res.error}`
                    }
                })
            }
        }
    </script>
</body>

</html>